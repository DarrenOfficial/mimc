diff --git a/proxy/src/main/java/net/md_5/bungee/connection/DownstreamBridge.java b/proxy/src/main/java/net/md_5/bungee/connection/DownstreamBridge.java
index 6557602e..1fd3a41b 100644
--- a/proxy/src/main/java/net/md_5/bungee/connection/DownstreamBridge.java
+++ b/proxy/src/main/java/net/md_5/bungee/connection/DownstreamBridge.java
@@ -145,7 +145,7 @@ public class DownstreamBridge extends PacketHandler
         float yaw = packet.buf.readFloat();
         float pitch = packet.buf.readFloat();
         byte flags = packet.buf.readByte();
-        bungee.getLogger().info( String.format("PacketPlayOutPlayerPositionAndLook %s X: %.2f Y: %.2f Z: %.2f", con.getUniqueId(), x, y, z) );
+        //bungee.getLogger().info( String.format("PacketPlayOutPlayerPositionAndLook %s X: %.2f Y: %.2f Z: %.2f", con.getUniqueId(), x, y, z) );
 
         ((BungeeCord)bungee).partitionManager.movePlayer(
                 con.getUniqueId()
@@ -392,18 +392,12 @@ public class DownstreamBridge extends PacketHandler
     {
         PluginMessageEvent event = new PluginMessageEvent( server, con, pluginMessage.getTag(), pluginMessage.getData().clone() );
 
-        BungeeCord bungeeCord = ((BungeeCord)this.bungee);
-        bungeeCord.getLogger().warning(String.format("PluginMessage received %s", pluginMessage.getTag()) );
-
-        if ( pluginMessage.getTag().equals( "mimc:channel" ) )
+        if ( pluginMessage.getTag().equals(PartitionManager.CHANNEL_NAME) )
         {
             PartitionManager partitionManager = ((BungeeCord)this.bungee).partitionManager;
 
-            bungeeCord.getLogger().warning("mimc:channel PluginMessage received");
-
             DataInput di = pluginMessage.getStream();
             String subChannel = di.readUTF();
-            bungeeCord.getLogger().warning( String.format("mimc:channel PluginMessage %s", subChannel) );
 
             if (subChannel.equals("migration-prepared"))
             {
diff --git a/proxy/src/main/java/net/md_5/bungee/connection/UpstreamBridge.java b/proxy/src/main/java/net/md_5/bungee/connection/UpstreamBridge.java
index f2bd128c..8fdb4e1f 100644
--- a/proxy/src/main/java/net/md_5/bungee/connection/UpstreamBridge.java
+++ b/proxy/src/main/java/net/md_5/bungee/connection/UpstreamBridge.java
@@ -122,7 +122,6 @@ public class UpstreamBridge extends PacketHandler
         double x = packet.buf.readDouble();
         double y = packet.buf.readDouble();
         double z = packet.buf.readDouble();
-        //bungee.getLogger().info( String.format("PacketPlayInPlayerPosition %s X: %.2f Y: %.2f Z: %.2f", con.getUniqueId(), x, y, z) );
         ((BungeeCord)bungee).partitionManager.movePlayer(con.getUniqueId(), x, y, z);
     }
 
@@ -192,9 +191,8 @@ public class UpstreamBridge extends PacketHandler
                 //case 0x2D: packetName = "PacketPlayInUseITem"; break;
             }
             if (packetName != null) {
-                bungee.getLogger().log( Level.WARNING, String.format("Event 0x%02X: %s", packetId, packetName) );
+                bungee.getLogger().log( Level.INFO, String.format("Event 0x%02X: %s", packetId, packetName) );
             }
-
             packet.buf.readerIndex(readerIndex);
 
             con.getServer().getCh().write( packet );
diff --git a/proxy/src/main/java/net/md_5/bungee/mimc/PartitionManager.java b/proxy/src/main/java/net/md_5/bungee/mimc/PartitionManager.java
index 53182a83..3267dd47 100644
--- a/proxy/src/main/java/net/md_5/bungee/mimc/PartitionManager.java
+++ b/proxy/src/main/java/net/md_5/bungee/mimc/PartitionManager.java
@@ -10,7 +10,8 @@ import net.md_5.bungee.mimc.util.CopyOnWriteSet;
 import java.util.*;
 
 public class PartitionManager {
-    private final String SPAWN_SERVERNAME = "spawn";
+    public final static String CHANNEL_NAME = "mimc:channel";
+    private final static String SPAWN_SERVERNAME = "spawn";
     private final BungeeCord bungeeCord;
 
     private String worldFolder;
@@ -28,6 +29,9 @@ public class PartitionManager {
             return;
         }
 
+        // Required in order to receive responses from the server
+        BungeeCord.getInstance().registerChannel(CHANNEL_NAME);
+
         this.worldFolder = worldFolder;
         this.servers = servers;
 
@@ -193,6 +197,10 @@ public class PartitionManager {
         } else if (partitionsInRange.size() > 1) {
             target = partitionsInRange.stream().max(Comparator.comparing(Partition::size)).get();
 
+            if (this.migrationRequests.contains(new MigrationRequest(p, target))) {
+                return target;
+            }
+
             bungeeCord.getLogger().warning(String.format("MIMC | Adding player at %s to existing partition on node %s", p.location, target.getServerName()));
             bungeeCord.getLogger().warning(String.format("MIMC | Merging %d partitions that are in range", partitionsInRange.size()-1));
 
@@ -206,6 +214,10 @@ public class PartitionManager {
         } else {
             target = partitionsInRange.get(0);
 
+            if (this.migrationRequests.contains(new MigrationRequest(p, target))) {
+                return target;
+            }
+
             if (previous == null) {
                 // The new player is in range of a partition. Add it to that partition.
                 bungeeCord.getLogger().warning(String.format("MIMC | Adding player at %s to existing partition on node %s", p.location, target.getServerName()));
@@ -225,6 +237,6 @@ public class PartitionManager {
         out.writeUTF( target.serverName );
         out.writeUTF( p.name );
 
-        sourceServer.sendData("mimc:channel", out.toByteArray());
+        sourceServer.sendData(PartitionManager.CHANNEL_NAME, out.toByteArray());
     }
 }
