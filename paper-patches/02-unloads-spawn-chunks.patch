diff --git a/src/main/java/net/minecraft/server/EntityPlayer.java b/src/main/java/net/minecraft/server/EntityPlayer.java
index 18695d9b..95fc428c 100644
--- a/src/main/java/net/minecraft/server/EntityPlayer.java
+++ b/src/main/java/net/minecraft/server/EntityPlayer.java
@@ -104,7 +104,7 @@ public class EntityPlayer extends EntityHuman implements ICrafting {
         this.serverStatisticManager = minecraftserver.getPlayerList().getStatisticManager(this);
         this.advancementDataPlayer = minecraftserver.getPlayerList().f(this);
         this.K = 1.0F;
-        this.a(worldserver);
+        //this.a(worldserver);
 
         // CraftBukkit start
         this.displayName = this.getName();
diff --git a/src/main/java/net/minecraft/server/MinecraftServer.java b/src/main/java/net/minecraft/server/MinecraftServer.java
index ad98a18b..fbf99108 100644
--- a/src/main/java/net/minecraft/server/MinecraftServer.java
+++ b/src/main/java/net/minecraft/server/MinecraftServer.java
@@ -702,7 +702,6 @@ public abstract class MinecraftServer extends IAsyncTaskHandlerReentrant<TickTas
     public boolean preparePlayerForMigration(String playerName) {
         LOGGER.warn("MIMC | Running MinecraftServer::preparePlayerForMigration()");
 
-        getPlayerList().savePlayers();
         saveChunks(true, true, true);
 
         Iterator iterator = this.getWorlds().iterator();
@@ -711,6 +710,9 @@ public abstract class MinecraftServer extends IAsyncTaskHandlerReentrant<TickTas
             worldserver.isMigrating = true;
         }
 
+        // Save player location just before responding so we have the most up-to-date location
+        getPlayerList().savePlayers();
+
         return true;
     }
     // MIMC end
